{"version":3,"file":"static/js/52.4b2a8302.chunk.js","mappings":"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","sources":["redux/contacts/contact-selectors.js","webpack://react-homework-template/./src/components/ContactList/contactList.module.scss?caee","components/ContactList/ContactList.jsx","redux/filters/filter-selectors.js","webpack://react-homework-template/./src/components/Filter/filter.module.scss?8942","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/contactForm.module.scss?1b47","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/pages/ContactsPage/contactsPage.module.scss?7cd3","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["export const getAllContacts = store => store.contacts;\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLocaleLowerCase();\n  const filteredContscts = contacts.items.filter(({ name }) => {\n    return name.toLocaleLowerCase().includes(normalizedFilter);\n  });\n\n  return filteredContscts;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"contactList_contactsList__lwI+c\",\"contactList\":\"contactList_contactList__+2R78\",\"contact\":\"contactList_contact__mSj9u\",\"number\":\"contactList_number__HOQzi\",\"button\":\"contactList_button__JAC30\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { ImMobile } from 'react-icons/im';\nimport { IconContext } from 'react-icons';\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\nimport { getFilteredContacts } from 'redux/contacts/contact-selectors';\n\nimport styles from './contactList.module.scss';\n\nconst ContactList = () => {\n  const filterContacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const removeContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  return (\n    <ul className={styles.contactsList}>\n      {filterContacts.map(contact => {\n        const { id, name, number } = contact;\n        return (\n          <li key={id} className={styles.contactList}>\n            <span className={styles.contact}>\n              <IconContext.Provider value={{ style: { color: '#ff6f00' } }}>\n                <ImMobile />\n              </IconContext.Provider>\n              {name}: <span className={styles.number}>{number}</span>\n            </span>\n            <button\n              type=\"button\"\n              className={styles.button}\n              onClick={() => removeContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","export const getFilter = store => store.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"filter_label__fR+Y+\",\"input\":\"filter_input__2kUfd\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/filters/filter-selectors';\nimport { setFilter } from 'redux/filters/filterSlice';\n\nimport styles from './filter.module.scss';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Name\"\n          value={filter}\n          onChange={handleFilter}\n          className={styles.input}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contactForm_form__c9LIM\",\"label\":\"contactForm_label__v6DdP\",\"input\":\"contactForm_input__qHaFX\",\"btn\":\"contactForm_btn__lLaqP\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchAddContacts } from 'redux/contacts/contacts-operations';\n\nimport styles from './contactForm.module.scss';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const handleChange = ({ target }) => {\n    switch (target.name) {\n      case 'name':\n        return setName(target.value);\n      case 'number':\n        return setNumber(target.value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(fetchAddContacts({ name, number }));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Numder\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"444-44-44\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\n// const ContactForm = () => {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n\n//   const dispatch = useDispatch();\n\n//   const handleChange = ({ target }) => {\n//     switch (target.name) {\n//       case 'name':\n//         return setName(target.value);\n//       case 'number':\n//         return setNumber(target.value);\n//       default:\n//         return;\n//     }\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n\n//     dispatch(fetchAddContacts({ name, number }));\n//     setName('');\n//     setNumber('');\n//   };\n\n//   return (\n//     <form className={styles.form} onSubmit={handleSubmit}>\n//       <label className={styles.label}>\n//         Name\n//         <input\n//           className={styles.input}\n//           type=\"text\"\n//           name=\"name\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//           required\n//           placeholder=\"Name\"\n//           value={name}\n//           onChange={handleChange}\n//         />\n//       </label>\n//       <label className={styles.label}>\n//         Numder\n//         <input\n//           className={styles.input}\n//           type=\"tel\"\n//           name=\"number\"\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//           required\n//           placeholder=\"444-44-44\"\n//           value={number}\n//           onChange={handleChange}\n//         />\n//       </label>\n\n//       <button className={styles.button} type=\"submit\">\n//         Add contact\n//       </button>\n//     </form>\n//   );\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"sectionBook\":\"contactsPage_sectionBook__iRDgp\",\"title\":\"contactsPage_title__SxdMT\",\"titleContacts\":\"contactsPage_titleContacts__NQWg7\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nimport { getFilteredContacts } from 'redux/contacts/contact-selectors';\nimport { fetchAllContacts } from 'redux/contacts/contacts-operations';\n\nimport styles from './contactsPage.module.scss';\n\nconst ContactsPage = () => {\n  const filterContacts = useSelector(getFilteredContacts);\n  const isContactsFilter = Boolean(filterContacts.length);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  return (\n    <section className={styles.sectionBook}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.titleContacts}>Contacts</h2>\n      <Filter />\n      {isContactsFilter && <ContactList />}\n      {!isContactsFilter && <p>There is no contacts.</p>}\n    </section>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getFilteredContacts","contacts","filter","items","normalizedFilter","toLocaleLowerCase","name","includes","filterContacts","useSelector","dispatch","useDispatch","className","styles","map","contact","id","number","value","style","color","type","onClick","fetchDeleteContact","removeContact","getFilter","store","pattern","title","required","placeholder","onChange","target","setFilter","useState","setName","setNumber","handleChange","onSubmit","e","preventDefault","fetchAddContacts","isContactsFilter","Boolean","length","useEffect","fetchAllContacts"],"sourceRoot":""}